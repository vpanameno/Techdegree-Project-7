{"ast":null,"code":"var _jsxFileName = \"/Users/vpanameno/Documents/GitHub/Techdegree-Project-7/gallery_app/src/components/PhotoContainer.js\";\nimport React from 'react';\nimport Photo from './Photo';\nimport NotFound from './NotFound';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PhotoContainer extends Component {\n  render() {\n    const results = props.data;\n    let photos; //Function below determines if the user has inputted a result: if it's empty it will render the notFound component otherwise it will pass URL\n\n    if (this.results.length > 0) {\n      photos = results.map(photo => /*#__PURE__*/_jsxDEV(Photo, {\n        url: `https://live.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`\n      }, photo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this));\n    } else {\n      photos = /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: photos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(PhotoContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/vpanameno/Documents/GitHub/Techdegree-Project-7/gallery_app/src/components/PhotoContainer.js"],"names":["React","Photo","NotFound","withRouter","PhotoContainer","Component","render","results","props","data","photos","length","map","photo","server","id","secret","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,cAAN,SAA6BC,SAA7B,CAAuC;AACrCC,EAAAA,MAAM,GAAG;AACT,UAAMC,OAAO,GAAGC,KAAK,CAACC,IAAtB;AAEA,QAAIC,MAAJ,CAHS,CAIT;;AACA,QAAI,KAAKH,OAAL,CAAaI,MAAb,GAAqB,CAAzB,EAA4B;AACzBD,MAAAA,MAAM,GAAGH,OAAO,CAACK,GAAR,CAAYC,KAAK,iBAC3B,QAAC,KAAD;AAAO,QAAA,GAAG,EAAG,iCAAgCA,KAAK,CAACC,MAAO,IAAGD,KAAK,CAACE,EAAG,IAAGF,KAAK,CAACG,MAAO;AAAtF,SAAkGH,KAAK,CAACE,EAAxG;AAAA;AAAA;AAAA;AAAA,cADU,CAAT;AAEA,KAHH,MAGS;AACLL,MAAAA,MAAM,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAT;AACD;;AAEH,wBACI;AAAA,8BACE;AAAA,kBAAK,KAAKF,KAAL,CAAWS;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGP;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQC;;AArBoC;;AAwBvC,oBAAeP,UAAU,CAACC,cAAD,CAAzB","sourcesContent":["import React from 'react';\nimport Photo from './Photo';\nimport NotFound from './NotFound'\nimport { withRouter } from 'react-router-dom'\n\nclass PhotoContainer extends Component {\n  render() {\n  const results = props.data\n\n  let photos;\n  //Function below determines if the user has inputted a result: if it's empty it will render the notFound component otherwise it will pass URL\n  if (this.results.length> 0) {\n     photos = results.map(photo =>\n    <Photo url={`https://live.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`} key={photo.id} />);\n    } else {\n      photos = <NotFound />\n    }\n\n  return (\n      <div>\n        <h2>{this.props.title}</h2>\n        <ul>\n          {photos}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(PhotoContainer);\n"]},"metadata":{},"sourceType":"module"}